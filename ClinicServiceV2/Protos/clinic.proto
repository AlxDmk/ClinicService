syntax = "proto3";

option csharp_namespace = "ClinicServiceV2Namespace";

import "google/protobuf/wrappers.proto";

import "google/api/annotations.proto";


// Сервис Клиники
service ClinicService{

	// Добавление Клиента
	rpc CreateClient(CreateClientRequest) returns (CreateClientResponse){
		option (google.api.http) = {
			post: "/api/client/create",
			body: "*"
		};
	}

	// Обновление клиента
	rpc UpdateClient(UpdateClientRequest) returns (UpdateClientResponse){
		option (google.api.http) = {
			put: "/api/client"
			
		};
	}

	// Удаление клиента
	rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse){
		option (google.api.http) = {
			delete: "/api/client/clientId"
		};	
	}

	// Получение клиента по ID
	rpc GetClientById(GetClientByIdRequest) returns (GetClientByIdResponse){
		option (google.api.http) = {
			get: "/api/client/clientId"
		}; 
	}
	
	// Получение всех клиентов
	rpc GetClients(GetClientsRequest) returns (GetClientsResponse){
		option (google.api.http) = {
			get: "/api/clients"	
		};	
	}
		
}
// Параметры запроса на создание клиента
message CreateClientRequest {
	// Документ
	string document = 1;
	// Фамилия
	string surname = 2;
	// Имя
	string firstName = 3;
	//Отчество
	string patronymic = 4;
}
// Параметры ответа на создание клиента
message CreateClientResponse {
	google.protobuf.Int32Value clientId = 1;
	int32 errCode = 2;
	string errMessage = 3;
}
// Параметры запроса на обновление клиента
message UpdateClientRequest {
	int32 clientId = 1;
	string document = 2;
	string surname = 3;
	string firstName = 4;
	string patronymic = 5;
}
// Параметры ответа на обновление клиента
message UpdateClientResponse {
	int32 errCode = 1;
	string errMessage = 2;
}
// Параметры запроса на удаление клиента
message DeleteClientRequest {
	int32 clientId = 1;
}
// Параметры ответа на удаление клиента
message DeleteClientResponse {
	int32 errCode = 1;
	string errMessage = 2;
}
// Параметры запроса на получение клиента по идентификатору
message GetClientByIdRequest {
	int32 clientId = 1;
}
// Параметры ответа на получение клиента по идентификатору
message GetClientByIdResponse {
	ClientResponse client = 1;
	int32 errCode = 2;
	string errMessage = 3;
}

message ClientResponse {
	int32 clientId = 1;
	string document = 2;
	string surname = 3;
	string firstName = 4;
	string patronymic = 5;
}

message GetClientsRequest {

}

message GetClientsResponse {
	repeated ClientResponse clients = 1;
	int32 errCode = 2;
	string errMessage = 3;
}